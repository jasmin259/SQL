--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL. 

--Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

--Then I inserted the Spotify Data .csv into the table.

--Next, I explored the data using the following SQL. The goal was to understand popularity of artist and track, as well as the danceability and duration of the track. 

--Who are the top 10 artists based on popularity? 

SELECT distinct artist_name, avg(popularity)as popularity
FROM Spotifydata
GROUP BY artist_name
ORDER BY avg(popularity) DESC
LIMIT 10; 
 
--Of the top 10 aritist, what is the their most popular song? 
--and what is the dancability of their song? 

SELECT artist_name, ROUND(avg(popularity),0)as 'artist popularity',track_name,max(popularity) as 'track popularity',danceability 
FROM Spotifydata
GROUP BY artist_name
ORDER BY avg(popularity)DESC, 'track popularity'
LIMIT 10;

--What is the duration in minutes for these tracks? 

SELECT artist_name, ROUND(avg(popularity),0)as 'artist popularity',track_name,max(popularity) as 'track popularity',danceability,(duration_ms/60000) as 'minutes' 
FROM Spotifydata
GROUP BY artist_name
ORDER BY avg(popularity)DESC,'minutes'
LIMIT 10;
